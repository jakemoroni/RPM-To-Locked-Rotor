# Copyright (C) 2024 Jacob Moroni (opensource@jakemoroni.com).
# SPDX-License-Identifier: GPL-3.0-or-later
# Makefile to build the application.

# Set to point to the avrdude binary.
# Enables use of newer binary if built manually.
AVRDUDE_BINARY		:= avrdude

# USBTiny (For ATtiny)
AVRDUDE_PROGRAMMER	:= usbtiny

MCU			:= attiny85
AVRDUDE_MCU		:= t85
FUSE_VALUES		:= efuse:w:0xFF:m -U hfuse:w:0xDF:m -U lfuse:w:0xE2:m

CROSS_COMPILE		:= avr-

BUILD_DIR	:= ./build
SRC_DIR		:= ./src

CFLAGS		:= -mmcu=$(MCU)
CFLAGS		+= -MMD -MP
CFLAGS		+= -Wall
CFLAGS		+= -Wstrict-prototypes
CFLAGS		+= -Os
CFLAGS		+= -fshort-enums
CFLAGS		+= -ffunction-sections
CFLAGS		+= -fdata-sections

LDFLAGS		:= -mmcu=$(MCU) -Wl,-gc-sections,--relax

ASM_SRCS	:= $(wildcard $(SRC_DIR)/*.S)
C_SRCS		:= $(wildcard $(SRC_DIR)/*.c)
OBJS		:= $(filter %.o, \
			$(patsubst $(SRC_DIR)/%.S,$(BUILD_DIR)/%.o,$(ASM_SRCS)) \
			$(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(C_SRCS)))

all:	application.hex

# Compile ASM files.
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.S | $(BUILD_DIR)
	$(CROSS_COMPILE)gcc -c -o $@ $(CFLAGS) $<

# Compile C files.
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | $(BUILD_DIR)
	$(CROSS_COMPILE)gcc -c -o $@ $(CFLAGS) $<

application.elf: $(OBJS)
	$(CROSS_COMPILE)gcc -o $@ $(OBJS) $(LDFLAGS)

application.hex: application.elf
	@$(CROSS_COMPILE)objcopy -O ihex $< $@
	$(info Program size:)
	@$(CROSS_COMPILE)size $<

$(BUILD_DIR):
	@mkdir $@

.PHONY: flash
flash: application.hex
	$(info Programming fuses...)
	@$(AVRDUDE_BINARY) -c $(AVRDUDE_PROGRAMMER) -p $(AVRDUDE_MCU) -U $(FUSE_VALUES)
	$(info Programming flash...)
	@$(AVRDUDE_BINARY) -c $(AVRDUDE_PROGRAMMER) -p $(AVRDUDE_MCU) -U flash:w:application.hex:i

.PHONY: read_fuses
read_fuses:
	$(info Reading fuses...)
	@$(AVRDUDE_BINARY) -c $(AVRDUDE_PROGRAMMER) -p $(AVRDUDE_MCU) -U efuse:r:-:h -U hfuse:r:-:h -U lfuse:r:-:h

.PHONY: clean
clean:
	@rm -rf application.elf application.hex $(BUILD_DIR)

# Incorporate header deps, generated by GCC with -MMD -MP.
-include $(OBJS:%.o=%.d)
